/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
   
    compile 'com.google.guava:guava:20.0'
    //Spark web framework
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.5.4'


    //lombok
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.12'
    
    
    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    //Hamcrest matchers
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

version = '1.0.0-SNAPSHOT'
// Define the main class for the application
mainClassName = 'be.nille.ci.App'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Continuous Integration Test',
        	'Implementation-Version': version,
        	'Main-Class': mainClassName
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task stage(dependsOn: ['fatJar', 'clean'])
fatJar.mustRunAfter clean

