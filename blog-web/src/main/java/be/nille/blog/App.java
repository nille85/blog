package be.nille.blog;

import be.nille.blog.component.Page;
import be.nille.blog.component.home.HomePage;
import be.nille.blog.component.post.PostPage;
import be.nille.blog.config.ServerPort;
import be.nille.blog.config.SimpleServerPort;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoDatabase;
import lombok.extern.slf4j.Slf4j;
import static spark.Spark.before;
import static spark.Spark.exception;
import static spark.Spark.get;
import static spark.Spark.halt;
import static spark.Spark.port;
import static spark.Spark.redirect;
import static spark.Spark.staticFiles;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
@Slf4j
public class App {

    private final String databaseURL;

    public App(final String databaseURL) {
        this.databaseURL = databaseURL;
    }

    public MongoDatabase getDatabase() {

        MongoClient mongoClient = new MongoClient(
                new MongoClientURI(databaseURL)
        );
        MongoDatabase db = mongoClient.getDatabase("openid-connect");
        return db;
    }

    public static void main(String[] args) throws Exception {
        ServerPort port = new SimpleServerPort(System.getenv("PORT"));
        port(port.getValue());

        staticFiles.location("/public");

        App app = new App(System.getenv("MONGO_URL"));

        redirect.get("/", "/posts");
        
        get("/posts", (request, response) -> {
            Page page = new HomePage(app.getDatabase());
            return page.handleRequest(request, response);
        }
        );

        //TODO debug
        get("/posts/:id", (request, response) -> {
            Page page = new PostPage(app.getDatabase());
            return page.handleRequest(request, response);
        });

        before("/protected/*", (request, response) -> {
            // ... check if authenticated
            halt(401, "Go Away!");
        });
        
        exception(RuntimeException.class, (exception, request, response) -> {
            log.error(exception.getMessage());         
        });

    }

}
